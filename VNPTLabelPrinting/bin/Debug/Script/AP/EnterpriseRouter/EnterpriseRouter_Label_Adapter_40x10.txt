/*
Version=EPRS01VN0U0001
BuildTime=15/07/2021 10:30
Copyright=Copyright of VNPT Technology 2021
Product=ENTERPRISE ROUTER
Station=Adapter Label
About={
Version=EPRS01VN0U0001;Content=- Xây dựng phần mềm in tem adapter sản phẩm enterprise router;Date=15/07/2021;Type=Tạo mới;Person=Hồ Đức Anh
}
*/

using System;
using System.Text;
using System.Net.NetworkInformation;
using System.Threading;
using System.Text.RegularExpressions;
using System.Linq;
using System.Collections.Generic;
using Automation;

namespace AP {

    public class EnterPriseRouter_LabelAdapter {

	[STAThread]
	static void Main() { }
	
		public string logSystem {get;set;}
		
		//[Yes]
		public bool LabelAdapter(string setting_layout_file, string setting_printer_name, string setting_copies, string barcode_serial_number){
			bool r = false;
			setting_layout_file = string.Format("{0}Layout\\{1}", AppDomain.CurrentDomain.BaseDirectory, setting_layout_file);
			logSystem += string.Format("> serial number: {0}\n", barcode_serial_number);
			
			//check barcode_serial_number format
			string pattern = "^[0-9,A-F]{15}$";
			r = Regex.IsMatch(barcode_serial_number, pattern, RegexOptions.IgnoreCase);
			logSystem += string.Format("> check serial number with pattern {0}: {1}\n", pattern, r);
			if(!r) return false;
			
			//gen adapter serial number
			string adapter_serial_number = "A" + barcode_serial_number.ToUpper();
			logSystem += string.Format("> gen from serial number to adapter serial number: {0}\n", adapter_serial_number);
			if (adapter_serial_number == null) return false;
			
			
			//printing label
			var bartender = new BartenderHelper();
			var ASN = new BartenderHelper.ItemVariable() { Name = "ASN", Value = adapter_serial_number };
			
			r = bartender.printLabel(setting_layout_file, setting_printer_name, setting_copies, ASN);
			bartender.Dispose();
			
			logSystem += string.Format("> printing label: {0}\n", r);
			return r;
		}
		
    }
}
